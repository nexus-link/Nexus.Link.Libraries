<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration.Abstractions" Version="2.1.1" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net461'">
    <Reference Include="System.Configuration" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.4.0" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Platform\Configurations\" />
  </ItemGroup>

  <PropertyGroup>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Nexus.Link.Libraries.Core</PackageId>
    <Version>4.6.0</Version>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageTags>nexus;link;fulcrum;lever</PackageTags>
    <Authors>XLENT Link</Authors>
    <PackageProjectUrl>https://github.com/nexus-link/Nexus.Link.Libraries.Core</PackageProjectUrl>
    <PackageLanguage>en-US</PackageLanguage>
    <Description>Nexus core library based on .NET Standard</Description>
    <Copyright>Copyright ©2019 Xlent Link AB</Copyright>
    <IncludeSymbols>true</IncludeSymbols>
    <PackageReleaseNotes>
      4.6.0 Added DebugTraceLogger.
      4.5.4 Added extensions AsQueuedSyncLogger and AsBatchLogger for chained creation of logger.
      4.5.3 Added overloads of CallAsyncFromSync.
      4.5.1 Added NexusAsyncSemaphore.
      4.4.3 Added overloads of SchemaParser methods.
      4.4.2 Added overloads of JsonHelper methods.
      4.4.1 Added support for IConfiguration.
      4.3.3 Added missing empty constructor for Tenant.
      4.3.2 VersionedSchema is now not nullable.
      4.3.0 FulcrumApplication.Setup.LogSeverityLevelThreshold is back. It will be set to an initial value that depends on the runtime level.
      4.2.0 InstanceId in response for ServiceMetas and Health
      4.1.0 JsonHelper for safe deserializing.
      4.0.0 Support refactored Authentication
      3.7.1 Bumped version
      3.7.0 Added functionality for NamedSchema and VersionedSchema.
      3.6.4 Reworked how a FulcrumException should copy fields from its inner exception and from FulcrumError. Renamed ParentInstanceId to InnerInstanceId.
      3.6.3 Optimized memory queue task handling.
      3.6.2 Added IFulcrumError.ParentInstanceId
      3.6.1 Added IFulcrumError.ParentInstanceId
      3.5.0 Added FulcrumResourceException
      3.4.5 BUG: StackTrace was used in obsolete situations when logging
      3.4.4 BUG: ErrorLocation must not be set to StackTrace
      3.4.3 FulcrumException now sets CorrelationId from context if error exists but correlationid is null
      3.4.2 FulcrumException now sets CorrelationId from context if error is null
      3.4.1 Bumped version. New solution and build pipeline.
      3.4.0 Support in ConfigurationManagerAppSettings for reading local.settings.json and use for app settings.
      3.3.0 Log methods now accepts an additional data parameter that will be part of the LogRecord.
      3.2.5 BUG: Incorrect messages for FulcrumValidate.IsGreaterThan() and FulcrumValidate.IsGreaterThanOrEqualTo()
      3.2.4 BUG: BatchLogger was only logging logs below the threshold if outside a batch.
      3.2.3 LogSeverityLevelThreshold is now obsolete.
      3.2.2 LogRecord no longer handles SavedContext. It is now hidden in QueueToAsyncLogger.
      3.2.1 BUG: ThreadHandler.FireAndForgetResetContext() also resets context on top level.
      3.2.0 Added UserPrincipal and ClientPrincipal to FulcrumApplication.Context.
      3.1.0 FulcrumApplication.Context now consolidates our context classes, such as CorrelationIdValueProvider, into one class.
      3.0.1 Refactored Logger, Context and Threads.
      2.0.0 Renamed context Tenant to ClientTenant. Now doesn't set it to the value of the application tenant when client tenant is null.
      1.2.0 Refactored the value providers to better support .NET Core.
      1.1.3 Safer logging within MemoryQueue and ThreadHelper.
      1.1.2 Bug: FireAndForget thread could end before async job had ended.
      1.1.1 Renamed IQueueStatistics to IQueueMetrics
      1.1.0 Refactored the MemoryQueue. Added IQueueStatistics.
      1.0.4 Bumped
      1.0.1 Moved cache related code to Crud
      1.0.0 Core lib with support for .net standard
      0.1.0 Release candidate with support for .net standard
    </PackageReleaseNotes>
    <RootNamespace>Nexus.Link.Libraries.Core</RootNamespace>
    <AssemblyName>Nexus.Link.Libraries.Core</AssemblyName>
  </PropertyGroup>
</Project>
